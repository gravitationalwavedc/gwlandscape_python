default:
    image:
      name: ubuntu:20.04
      entrypoint: ["/usr/bin/env"]
  
    before_script:
      - apt -y update
      - apt -y install apt-utils
      - apt -y install net-tools python3.8 python3-pip python3-venv git
      - apt -y upgrade
  
  
python-tests:
    stage: test
    script:
      - cd ..
      - git clone https://github.com/gravitationalwavedc/gwdc_python.git gwdc-python || true
      - cd gwdc-python
      - git pull
      - cd ../gwlandscape_python
      - pip3 install poetry
      - poetry install
      - poetry run pytest --junitxml=junit.xml --cov-report xml --cov=gwlandscape_python

    artifacts:
      reports:
        coverage_report:
          coverage_format: cobertura
          path: coverage.xml
        junit: junit.xml
  
    

code-quality:
    image: docker:25
    variables:
      DOCKER_DRIVER: overlay2
      SP_VERSION: 0.85.26
    allow_failure: true
    services:
      - docker:25-dind
    before_script: []
    script:
      - docker run
          --env SOURCE_CODE="$PWD"
          --volume "$PWD":/code
          --volume /var/run/docker.sock:/var/run/docker.sock
          "registry.gitlab.com/gitlab-org/ci-cd/codequality:$SP_VERSION" /code
    artifacts:
      reports:
        codequality: gl-code-quality-report.json
  
  
flake8:
    script:
      - pip3 install flake8-gl-codeclimate
      - flake8 --exit-zero --format gl-codeclimate --output-file gl-code-quality-report.json
    artifacts:
      reports:
        codequality: gl-code-quality-report.json
  